// SHA256-d smoke tests

#include <gtest/gtest.h>
#include <sha256.h>



TEST(Sha256SmokeTest, basic) {
    std::vector<uint8_t> plaintext = {'a', 'b', 'c'}; // "abc"
    std::vector<uint8_t> expected = {
            0xba, 0x78, 0x16, 0xbf, 0x8f, 0x01, 0xcf, 0xea, 0x41, 0x41, 0x40, 0xde, 0x5d, 0xae, 0x22, 0x23,
            0xb0, 0x03, 0x61, 0xa3, 0x96, 0x17, 0x7a, 0x9c, 0xb4, 0x10, 0xff, 0x61, 0xf2, 0x00, 0x15, 0xad
    };

    auto hash = sha256_digest(plaintext);

    EXPECT_EQ(hash.size(), 32);
    EXPECT_EQ(hash, expected);
}

TEST(Sha256SmokeTest, double_sha_basic) {
    std::vector<uint8_t> plaintext = {'a', 'b', 'c'}; // "abc"
    std::vector<uint8_t> expected = {
            0xdf, 0xe7, 0xa2, 0x3f, 0xef, 0xee, 0xa5, 0x19, 0xe9, 0xbb, 0xfd, 0xd1, 0xa6, 0xbe, 0x94, 0xc4,
            0xb2, 0xe4, 0x52, 0x9d, 0xd6, 0xb7, 0xcb, 0xea, 0x83, 0xf9, 0x95, 0x9c, 0x26, 0x21, 0xb1, 0x3c
    };

    auto hash = sha256_digest(plaintext);
    hash = sha256_digest(hash);

    EXPECT_EQ(hash.size(), 32);
    EXPECT_EQ(hash, expected);

    auto hash2 = sha256d_digest(plaintext);
    EXPECT_EQ(hash2.size(), 32);
    EXPECT_EQ(hash2, expected);
}